#!/usr/bin/env bash

########################
# Author: Shinichi Okada
# Date: 2021-05-10
# Backpack for Laravel installer
###########################

# set defaults
version="v0.2.0"
script_name=$(basename "$0")
all=""
script_dir=$(pwd)
laravel_dir=""
vendor_dir="./vendor/backpack"
illuminate_dir="./vendor/laravel/framework/src/Illuminate"

usage() {
    cat <<EOF
Name: $script_name

Description: This script install all Backpack for Laravel modules: 
BackupManager, LogManager, Settings, PageManager, PermissionManager, MenuCrud, and  NewsCrud.

Requirement:
You must have Laravel installed and connected to a database.

Usage:  ./$script_name [ -a | -all ] [ -d path ] 
    -a | --all      This will install all modules.
    -v | --version  Script version.
    -h | --help     Show help.

Examples:
    cd to $script_name directory
    $ cd path/to/$script_name

    Then install all modules
    $ ./$script_name -a -d /path/to/laravel/project

    Or get help
    $ ./$script_name -h

    Or get version
    $ ./$script_name -v

Exit error status:
    3:  Error on installing Backpack Core packages
    4:  Error on installing BackupManager
    5:  Error on installing LogManager
    6:  Error on installing Settings
    7:  Error on installing PageManager
    8:  Error on installing PermissionManager
    9:  Error on installing MenuCrud
    10: Error on installing NewsCrud
    11: Error on install FileManager

EOF
    exit 2
}

# -a parameter to install all
while (($# > 0)); do
    case "$1" in
    -d | --dir)
        laravel_dir=$2
        shift 2
        ;;
    -v | --version)
        echo $version
        exit 0
        ;;
    -a | --all)
        all=true
        shift 1
        ;;
    -h | --help | *)
        usage
        exit 0
        ;;
    esac
done

# if $laravel_dir is empty or doesn't exist. Exit with warning.
if [[ -z "${laravel_dir}" || ! -d "${laravel_dir}" ]]; then
    echo "You need to provide path to your Laravel project"
    exit 1
fi

# cd to the project
cd "$laravel_dir" || exit 1

# check if /vendor/laravel/framework/src/Illuminate
if [[ ! -d "$illuminate_dir" ]]; then
    echo "You need to install Laravel."
    exit 1
fi

# Confirm if user updated the .env file especially APP_URL
read -rp "Have you updated .env file, like APP_URL, etc? yes/y or no/n   " ENV

env_ans=$(echo "$ENV" | cut -c 1-1 | tr "[:lower:]" "[:upper:]")

if [ ! "$env_ans" = Y ]; then
    echo "Update your .env file."
    exit 1
fi
# Confirm you are connected to DB and Laravel is running
read -rp "Are you connected to DB and Laravel is running? y or n   " RUNNING

run_ans=$(echo "$RUNNING" | cut -c 1-1 | tr "[:lower:]" "[:upper:]")

if [ ! "$run_ans" = Y ]; then
    echo "You need to connect to DB and run Laravel."
    exit 1
fi

# if so grep const VERSION = '8.40';
# find if it is greater than 5
# laravelversion=$(grep VERSION ./vendor/laravel/framework/src/Illuminate/Foundation/Application.php)

# echo "$laravelversion"

############### functions ###########

#########################
# Globals: $vendor_dir, $laravel_dir
# Arguments: one of followings,
# crud, backupmanager, filemanager, generators, logmanager,
# menucrud, newscrud, pagemanager, permissionmanager, settings
# Outputs: Y or N
# Returns: 0 for success, 3 for fail
##########################
check_dir() {
    PACKAGE=""
    cd "$laravel_dir" || exit
    local dir_to_check=$vendor_dir/$1
    while [[ -z "$PACKAGE" ]]; do
        if [[ "${all}" = "true" ]]; then
            if [[ -d "$dir_to_check" ]]; then
                # if you have it ask if you want to overwrite
                read -rp "It seems you already installed $1 packages. Do you want to overwrite it? yes/y or no/n.   " PACKAGE
            else
                PACKAGE=Y
            fi
        else
            if [[ -d "$dir_to_check" ]]; then
                # if you have it ask if you want to overwrite
                read -rp "It seems you already installed $1 packages. Do you want to overwrite it? yes/y or no/n.   " PACKAGE
            else
                read -rp "Do you want to install ${1}? yes/y or no/n.   " PACKAGE
            fi
        fi
    done

    echo "$PACKAGE" | cut -c 1-1 | tr "[:lower:]" "[:upper:]"
}

# if laravel version is greater than 5 it's ok

# check if .env file has DB_PASSWORD

# 1. Install Backpack Core packages
# check if you have Backpack Core packages
crud_ans=$(check_dir crud)

if [[ "$crud_ans" = Y ]]; then
    echo ">>>>> Installing CRUD."

    echo '>>>>> CRUD: Running composer require backpack/crud:"4.1.*"'
    composer require backpack/crud:"4.1.*" || exit 3

    echo '>>>>> CRUD: Running composer require backpack/generators --dev'
    composer require backpack/generators --dev || exit 3

    echo '>>>>> CRUD: Running composer require laracasts/generators --dev'
    composer require laracasts/generators --dev || exit 3

    echo '>>>>> CRUD: Running php artisan backpack:install'
    php artisan backpack:install || exit 3

    echo ""
    echo ">>>>> CRUD installed."
    echo ""
fi

# 2. Install BackupManager
backup_ans=$(check_dir backupmanager)

if [[ "$backup_ans" = Y ]]; then
    echo ">>>>> Installing BackupManager."

    echo '>>>>> Running composer require backpack/backupmanager'
    composer require backpack/backupmanager || exit 4

    echo '>>>>> Running php artisan vendor:publish'
    php artisan vendor:publish --provider="Backpack\BackupManager\BackupManagerServiceProvider" || exit 4

    echo '>>>>> Running php artisan backpack:add-sidebar-content'
    php artisan backpack:add-sidebar-content "<li class='nav-item'><a class='nav-link' href='{{ backpack_url('backup') }}'><i class='nav-icon la la-hdd-o'></i> Backups</a></li>" || exit 4

    echo 'Adding backup to config/filesystems'
    # Add a new "disk" to config/filesystems.php:
    cat <<EOF | sed -i "/^'disks'/ r /dev/stdin" config/filesystems.php || exit 4
// used for Backpack/BackupManager
        'backups' => [
            'driver' => 'local',
            'root'   => storage_path('backups'), // that's where your backups are stored by default: storage/backups
        ],
EOF
    echo ""
    echo ">>>>> BackupManager installed "
fi

# Add backup schedule
# // app/Console/Kernel.php

# protected function schedule(Schedule $schedule)
# {
#    $schedule->command('backup:clean')->daily()->at('04:00');
#    $schedule->command('backup:run')->daily()->at('05:00');
# }

# 3. Install LogManager
# If it is yes or parameter -y is given then install it else exit
log_ans=$(check_dir logmanager)

if [[ "$log_ans" = Y ]]; then
    echo ">>>>> Installing LogManager."
    echo '>>>>> Running composer require backpack/logmanager'

    composer require backpack/logmanager || exit 5

    echo '>>>>> Running php artisan backpack:add-sidebar-content'
    php artisan backpack:add-sidebar-content "<li class='nav-item'><a class='nav-link' href='{{ backpack_url('log') }}'><i class='nav-icon la la-terminal'></i> Logs</a></li>" || exit 5

    echo '>>>>> Replacing "channels" => ["single"]'
    ORIGINAL_STRING="channels' => ['single'],"
    NEW_STRING="channels' => ['daily'],"
    FILENAME='config/logging.php'
    sed -i "s/${ORIGINAL_STRING}/${NEW_STRING}/" $FILENAME || exit 5

    echo ""
    echo ">>>>> LogManager installed"
fi

# 4. Install Settings
setting_ans=$(check_dir settings)

if [[ "$setting_ans" = Y ]]; then
    echo ">>>>> Installing Settings."

    echo '>>>>> Running composer require backpack/settings'
    composer require backpack/settings || exit 6

    echo '>>>>> Running php artisan vendor:publish --provider'
    php artisan vendor:publish --provider="Backpack\Settings\SettingsServiceProvider" || exit 6

    echo '>>>>> Running php artisan migrate'
    php artisan migrate || exit 6

    echo '>>>>> Running php artisan backpack:add-sidebar-content'
    php artisan backpack:add-sidebar-content "<li class='nav-item'><a class='nav-link' href='{{ backpack_url('setting') }}'><i class='nav-icon la la-cog'></i> <span>Settings</span></a></li>" || exit 6

    echo '>>>>> Running php artisan db:seed --class'
    php artisan db:seed --class="Backpack\Settings\database\seeds\SettingsTableSeeder" || exit 6

    echo ""
    echo "Settings installed"
fi

# 5. Install PageManager
page_ans=$(check_dir pagemanager)

if [[ "$page_ans" = Y ]]; then
    echo ">>>>> Installing PageManager."

    echo '>>>>> Adding app/PageTemplates.php'
    pagetemp=./app/PageTemplates.php
    if [[ ! -e $pagetemp ]]; then
        cp "$script_dir"/PageTemplates.php "$laravel_dir"/app
    fi

    echo '>>>>> Running composer require backpack/pagemanager'
    composer require backpack/pagemanager || exit 7

    echo '>>>>> Running php artisan vendor:publish --provider'
    php artisan vendor:publish --provider="Backpack\PageManager\PageManagerServiceProvider" || exit 7

    echo '>>>>> Running php artisan migrate'
    php artisan migrate || exit 7

    echo '>>>>> Running php artisan backpack:add-sidebar-content'
    php artisan backpack:add-sidebar-content "<li class='nav-item'><a class='nav-link' href='{{ backpack_url('page') }}'><i class='nav-icon la la-file-o'></i> <span>Pages</span></a></li>" || exit 7

    echo ""
    echo '>>>>> PageManager installed'
fi

# 6. Install PermissionManager
permission_ans=$(check_dir permissionmanager)

if [[ "$permission_ans" = Y ]]; then
    echo ">>>>> Installing PermissionManager."

    echo '>>>>> Running composer require backpack/permissionmanager'
    composer require backpack/permissionmanager || exit 8

    echo '>>>>> Running php artisan vendor:publish --provider'
    php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider" --tag="migrations" || exit 8

    echo '>>>>> Running php artisan migrate'
    php artisan migrate || exit 8

    echo '>>>>> Running php artisan vendor:publish --provider'
    php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider" --tag="config"

    echo '>>>>> Running php artisan vendor:publish --provider'
    php artisan vendor:publish --provider="Backpack\PermissionManager\PermissionManagerServiceProvider" --tag="config" || exit 8

    echo '>>>>> Running the migraions: '
    php artisan migrate || exit 8

    echo '>>>>> Running php artisan backpack:add-sidebar-content'
    php artisan backpack:add-sidebar-content "<!-- Users, Roles, Permissions --><li class='nav-item nav-dropdown'><a class='nav-link nav-dropdown-toggle' href='#'><i class='nav-icon la la-users'></i> Authentication</a><ul class='nav-dropdown-items'><li class='nav-item'><a class='nav-link' href='{{ backpack_url('user') }}'><i class='nav-icon la la-user'></i> <span>Users</span></a></li><li class='nav-item'><a class='nav-link' href='{{ backpack_url('role') }}'><i class='nav-icon la la-id-badge'></i> <span>Roles</span></a></li><li class='nav-item'><a class='nav-link' href='{{ backpack_url('permission') }}'><i class='nav-icon la la-key'></i> <span>Permissions</span></a></li></ul></li>"

    echo ""
    echo '>>>>> PermissionManager installed.'
fi
# 7. Install MenuCrud
menu_ans=$(check_dir menucrud)

if [[ "$menu_ans" = Y ]]; then
    echo ">>>>> Installing MenuCRUD."
    echo '>>>>> Running composer require backpack/menucrud'
    composer require backpack/menucrud || exit 9

    echo '>>>>> Running php artisan vendor:publish --provider'
    php artisan vendor:publish --provider="Backpack\MenuCRUD\MenuCRUDServiceProvider" || exit 9

    echo '>>>>> Running php artisan migrate'
    php artisan migrate || exit 9

    echo '>>>>> Running php artisan backpack:add-sidebar-content'
    php artisan backpack:add-sidebar-content "<li class='nav-item'><a class='nav-link' href='{{ backpack_url('menu-item') }}'><i class='nav-icon la la-list'></i> <span>Menu</span></a></li>" || exit 9

    echo ""
    echo '>>>>> MenuCRUD installed.'
fi

# 8. Install NewsCrud
news_ans=$(check_dir newscrud)

if [[ "$news_ans" = Y ]]; then
    echo ">>>>> Installing NewsCRUD."
    echo '>>>>> Running composer require backpack/newscrud'
    composer require backpack/newscrud || exit 10

    echo '>>>>> Running php artisan vendor:publish --provider'
    php artisan vendor:publish --provider="Backpack\NewsCRUD\NewsCRUDServiceProvider" || exit 10

    echo '>>>>> Running php artisan migrate'
    php artisan migrate || exit 10

    echo '>>>>> Running php artisan backpack:add-sidebar-content'
    php artisan backpack:add-sidebar-content "<li class='nav-item nav-dropdown'><a class='nav-link nav-dropdown-toggle' href='#'><i class='nav-icon la la-newspaper-o'></i>News</a><ul class='nav-dropdown-items'><li class='nav-item'><a class='nav-link' href='{{ backpack_url('article') }}'><i class='nav-icon la la-newspaper-o'></i> Articles</a></li><li class='nav-item'><a class='nav-link' href='{{ backpack_url('category') }}'><i class='nav-icon la la-list'></i> Categories</a></li><li class='nav-item'><a class='nav-link' href='{{ backpack_url('tag') }}'><i class='nav-icon la la-tag'></i> Tags</a></li></ul></li>" || exit 10

    echo ""
    echo '>>>>> NewsCRUD installed.'
fi

# 9. Install FileManager
file_ans=$(check_dir filemanager)

if [[ "$file_ans" = Y ]]; then
    echo ">>>>> Installing FileManager."
    echo '>>>>> Running composer require backpack/filemanager'
    composer require backpack/filemanager || exit 11

    echo '>>>>> Running php artisan backpack:filemanager:install'
    php artisan backpack:filemanager:install || exit 11

    echo ""
    echo '>>>>> NewsCRUD installed.'
fi

echo "Installation completed."
echo "For PermissionManager to work, add the Spatie\Permission\Traits\HasRoles trait to your User model(s)"
echo "Happy Coding!"
exit 0
